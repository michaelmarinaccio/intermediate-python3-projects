#-----------------enclosing/nonlocal scope------------------------

def calc_paint_amount(width, height):

  square_feet = width * height
  # Write your code below!
  def calc_gallons():
    return square_feet / 400
  return calc_gallons()
print('Number of paint gallons needed: ')
print(str(calc_paint_amount(30,20)))

#-----------------nonlocal statement------------------------

walls = [(20, 9), (25, 9), (20, 9), (25, 9)]


def calc_paint_amount(wall_measurements):

  square_feet = 0

  def calc_square_feet():
    
    for width, height in wall_measurements:
      nonlocal square_feet
      square_feet += width * height

  def calc_gallons():
    return square_feet / 400

  calc_square_feet()

  return calc_gallons()


print('Number of paint gallons needed: ')
print(str(calc_paint_amount(walls)))

#-----------------global statement------------------------

def print_available(color):
  global paint_gallons_available
  paint_gallons_available = {
    'red': 50,
    'blue': 72,
    'green': 99,
    'yellow': 33
  }
  print('There are ' + str(paint_gallons_available[color]) + ' gallons available of ' + color + ' paint.')


print_available('red')
for color in paint_gallons_available:
  print(color)

#-----------------the legb rule------------------------

  color = 'green'

# Fix the function below:
def change_color(new_color):

  global color
  
  to_update = new_color

  def disp_color():
    print('The original color was: ' + color)

  disp_color()
  color = to_update
  print('The new color is: ' + color)


change_color('blue')
